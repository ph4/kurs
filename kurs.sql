CREATE DATABASE [dns2]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'dns2', FILENAME = N'/var/opt/mssql/data/dns2.mdf' , SIZE = 10240KB , MAXSIZE = 1024000KB , FILEGROWTH = 20480KB )
 LOG ON 
( NAME = N'dns2_log', FILENAME = N'/var/opt/mssql/data/dns2_log.ldf' , SIZE = 10240KB , MAXSIZE = 1024000KB , FILEGROWTH = 20480KB )
GO
ALTER DATABASE [dns2] SET COMPATIBILITY_LEVEL = 150
GO
ALTER DATABASE [dns2] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [dns2] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [dns2] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [dns2] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [dns2] SET ARITHABORT OFF 
GO
ALTER DATABASE [dns2] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [dns2] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [dns2] SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF)
GO
ALTER DATABASE [dns2] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [dns2] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [dns2] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [dns2] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [dns2] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [dns2] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [dns2] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [dns2] SET  DISABLE_BROKER 
GO
ALTER DATABASE [dns2] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [dns2] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [dns2] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [dns2] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [dns2] SET  READ_WRITE 
GO
ALTER DATABASE [dns2] SET RECOVERY FULL 
GO
ALTER DATABASE [dns2] SET  MULTI_USER 
GO
ALTER DATABASE [dns2] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [dns2] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [dns2] SET DELAYED_DURABILITY = DISABLED 
GO
USE [dns2]
GO
ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = Off;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = Primary;
GO
ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = On;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = Primary;
GO
ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = Off;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = Primary;
GO
USE [dns2]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [dns2] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO

CREATE TABLE [product] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [name] nvarchar(200) NOT NULL,
  [category_id] int,
  [description] nvarchar(2000),
  [price] money,
  [specifications_json] nvarchar(1000),
  [image] varbinary
)
GO

CREATE TABLE [category] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [name] nvarchar(100) NOT NULL
)
GO

CREATE TABLE [discount] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [amount] int NOT NULL,
  [category_id] int NOT NULL
)
GO

CREATE TABLE [cart] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [creation_time] datetime DEFAULT (GETDATE())
)
GO

CREATE TABLE [cart_items] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [cart_id] int NOT NULL,
  [product_id] int NOT NULL,
  [amount] int NOT NULL
)
GO

CREATE TABLE [order] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [user_id] int NOT NULL,
  [cart_id] int NOT NULL,
  [address_id] int NOT NULL,
  [payment_type] nchar(1),
  [order_status] nvarchar(255) NOT NULL CHECK ([order_status] IN ('checkout', 'payment', 'delivery', 'complete')) DEFAULT 'checkout'
)
GO

ALTER TABLE [order]
ADD CONSTRAINT address_null_only_on_chekcout CHECK (NOT (address_id is null AND order_status != 'checkout'));
GO

CREATE TABLE [address] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [user_id] int NOT NULL,
  [state] nvarchar(100) NOT NULL,
  [city] nvarchar(100) NOT NULL,
  [zip] int NOT NULL,
  [address] nvarchar(1000) NOT NULL
)
GO

CREATE TABLE [user] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [last_name] nvarchar(100) NOT NULL,
  [first_name] nvarchar(100) NOT NULL,
  [middle_name] nvarchar(100),
  [phone] char(10) NOT NULL,
  [dob] date NULL,
  [credentials] int NOT NULL
)
GO

CREATE TABLE [credentials] (
  [id] int PRIMARY KEY IDENTITY(1, 1),
  [login] nvarchar(100) UNIQUE NOT NULL,
  [password] nvarchar(100) NOT NULL,
  [user_type] nvarchar(255) NOT NULL CHECK ([user_type] IN ('user', 'manager', 'admin'))
)
GO

ALTER TABLE [product] ADD FOREIGN KEY ([category_id]) REFERENCES [category] ([id])
GO

ALTER TABLE [discount] ADD FOREIGN KEY ([category_id]) REFERENCES [category] ([id])
GO

ALTER TABLE [cart_items] ADD FOREIGN KEY ([cart_id]) REFERENCES [cart] ([id])
GO

ALTER TABLE [cart_items] ADD FOREIGN KEY ([product_id]) REFERENCES [product] ([id])
GO

ALTER TABLE [order] ADD FOREIGN KEY ([user_id]) REFERENCES [user] ([id])
GO

ALTER TABLE [order] ADD FOREIGN KEY ([cart_id]) REFERENCES [cart] ([id])
GO

ALTER TABLE [order] ADD FOREIGN KEY ([address_id]) REFERENCES [address] ([id])
GO

ALTER TABLE [address] ADD FOREIGN KEY ([user_id]) REFERENCES [user] ([id]) ON DELETE CASCADE
GO

ALTER TABLE [user] ADD FOREIGN KEY ([credentials]) REFERENCES [credentials] ([id])
GO
